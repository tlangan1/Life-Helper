diff --git a/README.md b/README.md
index 556a0d7..98eff95 100644
--- a/README.md
+++ b/README.md
@@ -15,3 +15,13 @@
 1. See `Netflix Search Box` section of D:\Computer Science\Tutorials\Front End Masters\Abandoned\Frameworks\Asynchronous Programming with RxJS\Asynchronous Programming in JavaScript.docx.
 1. See VSCode stuff located in D:\Computer Science\NEED TO REVIEW\JavaScript\Observables 1
 1. See VSCode stuff located in D:\Computer Science\Tutorials\Front End Masters\Abandoned\JavaScript\Rethinking Asynchronous JavaScript. Specifically, `Exercises\Ex6`
+
+## Application Behavior
+
+1. A task can be started but it can only be `un-started` if the task is not completed and if the user provides an explanation.
+2. A task can be can only be `un-completed` if the user provides an explanation.
+3. A task can be paused only if it has been started and not completed.
+
+## Multi User Considerations
+
+1. For now I am going to gloss over multi-user considerations like preventing two users from starting the same task or pushing changes out from the database as they get posted so that all users are aware.
diff --git a/diff.txt b/diff.txt
new file mode 100644
index 0000000..0693a03
--- /dev/null
+++ b/diff.txt
@@ -0,0 +1,483 @@
+diff --git a/README.md b/README.md
+index 556a0d7..98eff95 100644
+--- a/README.md
++++ b/README.md
+@@ -15,3 +15,13 @@
+ 1. See `Netflix Search Box` section of D:\Computer Science\Tutorials\Front End Masters\Abandoned\Frameworks\Asynchronous Programming with RxJS\Asynchronous Programming in JavaScript.docx.
+ 1. See VSCode stuff located in D:\Computer Science\NEED TO REVIEW\JavaScript\Observables 1
+ 1. See VSCode stuff located in D:\Computer Science\Tutorials\Front End Masters\Abandoned\JavaScript\Rethinking Asynchronous JavaScript. Specifically, `Exercises\Ex6`
++
++## Application Behavior
++
++1. A task can be started but it can only be `un-started` if the task is not completed and if the user provides an explanation.
++2. A task can be can only be `un-completed` if the user provides an explanation.
++3. A task can be paused only if it has been started and not completed.
++
++## Multi User Considerations
++
++1. For now I am going to gloss over multi-user considerations like preventing two users from starting the same task or pushing changes out from the database as they get posted so that all users are aware.
+diff --git a/src/LifeHelperApp.css b/src/LifeHelperApp.css
+index ca5fc05..a336811 100644
+--- a/src/LifeHelperApp.css
++++ b/src/LifeHelperApp.css
+@@ -46,19 +46,26 @@ header {
+   gap: 10px;
+ }
+ 
+-.app .return::after {
++button.return::after {
+   font-size: 30px;
+   content: "\25B2";
+   padding-inline-end: 10px;
+ }
+ 
+-.app .return {
++button.return {
+   color: var(--primary-color);
+   opacity: 0.5;
++  display: none;
+ }
+ 
+-.app .return:hover,
+-.app .destroy:hover {
++button.return.visible {
++  color: var(--primary-color);
++  opacity: 0.5;
++  display: block;
++}
++
++button.return:hover,
++button.destroy:hover {
+   opacity: 1;
+ }
+ 
+@@ -71,6 +78,55 @@ button {
+   content: "Ã—";
+ }
+ 
+-.item-list li .toggle {
+-  accent-color: #2196f3;
++/* *** using a pseudo-element to indicate the purpose of the "start" check box *** */
++/* input.toggle::before {
++  content: "Start";
++  position: relative;
++  opacity: 0;
++  color: white;
++  left: 1.5rem;
++  top: -0.7rem;
++  font-size: 0.2rem;
++}
++
++input.toggle:hover::before {
++  opacity: 1;
++  font-size: 0.6rem;
++  color: var(--primary-color);
++  transition: all 2s;
++} */
++
++/* *** using a span element to indicate the purpose of the "start" check box *** */
++div.toggle {
++  position: relative;
++}
++
++div.toggle:hover > span.hide {
++  opacity: 1;
++  font-size: 0.8rem;
++  color: var(--primary-color);
++  transition: all 1s;
++}
++
++span.hide {
++  position: absolute;
++  opacity: 0;
++  color: white;
++  left: -1.5rem;
++  font-size: 0.2rem;
++}
++
++/* Experiment with using both class and classList attributes on the same element */
++.started {
++  font-weight: bold;
++}
++
++.completed {
++  background-color: turquoise;
++}
++/* End of experiment */
++
++footer {
++  display: flex;
++  flex-direction: column;
+ }
+diff --git a/src/LifeHelperApp.jsx b/src/LifeHelperApp.jsx
+index 216c342..1afae95 100644
+--- a/src/LifeHelperApp.jsx
++++ b/src/LifeHelperApp.jsx
+@@ -1,5 +1,10 @@
+ import "./LifeHelperApp.css";
+ import { itemFromImport } from "./objective-goal-task.jsx";
++import {
++  affectItem,
++  startedButNotCompletedCount,
++  completedCount,
++} from "./helperFunctions";
+ 
+ import {
+   Show,
+@@ -10,11 +15,7 @@ import {
+ } from "solid-js";
+ import { useGlobalState } from "./GlobalStateProvider";
+ 
+-import { FindParentElement } from "./helperFunctions";
+-
+ function LifeHelperApp(props) {
+-  //   var x = itemFromImport({ item_id: 5 });
+-
+   var [refreshData, setRefreshData] = createSignal(0);
+   var [, , dataServer] = useGlobalState();
+   // parent contains an array of at most two objects.
+@@ -22,10 +23,11 @@ function LifeHelperApp(props) {
+   // 2) If the current view is a list of goals, then the array contains
+   //    one object that identifies the objective with which they are associated.
+   // 3) If the current view is a list of tasks, then the array contains two objects.
+-  //    The last object contains the goals to which they are associated
++  //    The last object contains the goal to which they are associated
+   //    and the first object contains the objective to which the goal in the last object is associated.
+   var [parent, setParent] = createSignal([]);
+   var [pageTitle, setPageTitle] = createSignal("");
++  var [visibleClassValue, setVisibleClassValue] = createSignal("");
+ 
+   createEffect(pageTitleEffect);
+ 
+@@ -33,6 +35,7 @@ function LifeHelperApp(props) {
+     switch (props.type) {
+       case "objective":
+         setPageTitle("Overall Objectives");
++        setVisibleClassValue("");
+         break;
+       case "goal":
+         setPageTitle(
+@@ -40,11 +43,14 @@ function LifeHelperApp(props) {
+             parent()[parent().length - 1].item_name
+           }"`
+         );
++        setVisibleClassValue("visible");
+         break;
+       case "task":
+         setPageTitle(
+           `Tasks to achieve goal "${parent()[parent().length - 1].item_name}"`
+         );
++        setVisibleClassValue("visible");
++
+         break;
+       default:
+         setPageTitle("Unknown Page Item");
+@@ -52,21 +58,15 @@ function LifeHelperApp(props) {
+   }
+ 
+   const fetchItems = async () => {
+-    // request options
++    var searchParams = "";
++    if (props.type != "objective")
++      searchParams = JSON.stringify({
++        parent_id: parent()[parent().length - 1].item_id,
++      });
+ 
+-    var item = {};
+-    if (props.type == "objective") item.item_id = 0;
+-    else item.item_id = parent()[parent().length - 1].item_id;
+-
+-    const options = {
+-      method: "POST",
+-      body: JSON.stringify(item),
+-      headers: {
+-        "Content-Type": "application/json",
+-      },
+-    };
+-
+-    var response = await fetch(dataServer + `/get/${props.type}s`, options);
++    var response = await fetch(
++      dataServer + `/${props.type}s` + "?params=" + searchParams
++    );
+     if (!response.ok) {
+       alert(
+         `Server Error: status is ${response.status} reason is ${response.statusText}`
+@@ -78,57 +78,11 @@ function LifeHelperApp(props) {
+ 
+   const [items] = createResource(refreshData, fetchItems);
+ 
+-  async function affectItem(evt, affectType) {
+-    // body data
+-    var item;
+-
+-    switch (affectType) {
+-      case "add":
+-        item = {
+-          name: evt.target.value,
+-          description: `This is a description of an ${props.type}`, // TODO create a description control
+-        };
+-        item.item_id = parent()[parent().length - 1].item_id;
+-        break;
+-      case "update":
+-        item = {
+-          name: evt.target.value,
+-          item_id: evt.target.attributes.item_id.value,
+-          description: `This is a description of an ${props.type}`, // TODO create a description control
+-        };
+-        break;
+-      case "delete":
+-        var parentLi = FindParentElement(evt.target, "li");
+-        item = {
+-          item_id: parentLi.attributes.item_id.value,
+-        };
+-        break;
+-    }
+-
+-    // request options
+-    const options = {
+-      method: "POST",
+-      body: JSON.stringify(item),
+-      headers: {
+-        "Content-Type": "application/json",
+-      },
+-    };
+-
+-    // send POST request
+-    var response = await fetch(
+-      dataServer + `/${affectType}/${props.type}`,
+-      options
+-    );
+-
+-    if (!response.ok) {
+-      alert(
+-        `Server Error: status is ${response.status} reason is ${response.statusText}`
+-      );
+-    } else {
+-      setRefreshData((refreshData() + 1) % 2);
+-      evt.target.value = "";
+-    }
+-  }
++  //   var startedCount = createMemo(
++  //     items().reduce((item, totalStarted) => {
++  //       if (item.started_dtm) totalStarted++;
++  //     })
++  //   );
+ 
+   function returnToParent() {
+     setParent(() => {
+@@ -154,11 +108,24 @@ function LifeHelperApp(props) {
+       <header>
+         <div class="header-title">
+           <h1 class={`${props.type}_header`}>{pageTitle()}</h1>
+-          <button class="return" onClick={returnToParent}></button>
++          <button
++            class={`return ${visibleClassValue()}`}
++            onClick={returnToParent}
++          ></button>
+         </div>
+         <input
+           class="new-item"
+-          onChange={(e) => affectItem(e, "add")}
++          onChange={(e) => {
++            affectItem(
++              e,
++              "add",
++              parent().length == 0 ? 0 : parent()[parent().length - 1].item_id,
++              props.type,
++              dataServer,
++              refreshData,
++              setRefreshData
++            );
++          }}
+           placeholder={`Enter ${props.type}`}
+         />
+       </header>
+@@ -175,13 +142,25 @@ function LifeHelperApp(props) {
+                   setParent,
+                   parent,
+                   setRefreshData,
+-                  refreshData
++                  refreshData,
++                  dataServer
+                 )
+               }
+             </For>
+           </ul>
+         </Show>
+       )}
++      <footer>
++        <span>{`Total items: ${
++          items.state == "ready" && items().length
++        }`}</span>
++        <span>{`Started but not completed items: ${
++          items.state == "ready" && startedButNotCompletedCount(items)
++        }`}</span>
++        <span>{`Completed items: ${
++          items.state == "ready" && completedCount(items)
++        }`}</span>
++      </footer>
+     </section>
+   );
+ }
+diff --git a/src/helperFunctions.js b/src/helperFunctions.js
+index e1074e6..8353178 100644
+--- a/src/helperFunctions.js
++++ b/src/helperFunctions.js
+@@ -4,3 +4,85 @@ export function FindParentElement(currentElement, parentType) {
+   if (currentElement.localName == parentType) return currentElement;
+   else return FindParentElement(currentElement.parentElement, parentType);
+ }
++
++export async function affectItem(
++  evt,
++  affectType,
++  item_id,
++  item_type,
++  dataServer,
++  refreshData,
++  setRefreshData
++) {
++  // body data
++  var item;
++  var endPoint;
++
++  switch (affectType) {
++    case "add":
++      item = {
++        parent_id: item_id,
++        name: evt.target.value,
++        description: `This is a description of a ${item_type}`, // TODO create a description control
++      };
++      endPoint = `/${affectType}/${item_type}`;
++      // item.item_id = parent()[parent().length - 1].item_id;
++      break;
++    case "start":
++      item = {
++        task_id: item_id,
++      };
++      endPoint = `/${affectType}`;
++      break;
++    case "update":
++      item = {
++        name: evt.target.value,
++        item_id: evt.target.attributes.item_id.value,
++        description: `This is a description of a ${item_type}`, // TODO create a description control
++      };
++      break;
++    case "delete":
++      var parentLi = FindParentElement(evt.target, "li");
++      item = {
++        item_id: parentLi.attributes.item_id.value,
++      };
++      break;
++  }
++
++  // request options
++  const options = {
++    method: "POST",
++    body: JSON.stringify(item),
++    headers: {
++      "Content-Type": "application/json",
++    },
++  };
++
++  // send POST request
++  var response = await fetch(dataServer + endPoint, options);
++
++  if (!response.ok) {
++    alert(
++      `Server Error: status is ${response.status} reason is ${response.statusText}`
++    );
++    return false;
++  } else {
++    evt.target.value = "";
++    setRefreshData((refreshData() + 1) % 2);
++    return true;
++  }
++}
++
++export function startedButNotCompletedCount(items) {
++  return items().reduce((totalStarted, item) => {
++    if (item.started_dtm && !item.completed_dtm) return totalStarted + 1;
++    else return totalStarted;
++  }, 0);
++}
++
++export function completedCount(items) {
++  return items().reduce((totalStarted, item) => {
++    if (item.completed_dtm) return totalStarted + 1;
++    else return totalStarted;
++  }, 0);
++}
+diff --git a/src/objective-goal-task.jsx b/src/objective-goal-task.jsx
+index 223db17..e9d6c7b 100644
+--- a/src/objective-goal-task.jsx
++++ b/src/objective-goal-task.jsx
+@@ -1,13 +1,16 @@
+ import { FindParentElement } from "./helperFunctions";
++import { affectItem } from "./helperFunctions";
+ 
+ export function itemFromImport(
+-  item,
+-  props,
+-  setParent,
+-  parent,
+-  setRefreshData,
+-  refreshData
++  item /* used in LifeHelperApp */,
++  props /* used in LifeHelperApp */,
++  setParent /* used in LifeHelperApp */,
++  parent /* used in LifeHelperApp */,
++  setRefreshData /* used in LifeHelperApp */,
++  refreshData /* used in LifeHelperApp */,
++  dataServer /* used in LifeHelperApp */
+ ) {
++  console.log(`In itemFromImport rendering item with name ${item.item_name}`);
+   return (
+     <li
+       class="item"
+@@ -30,15 +33,36 @@ export function itemFromImport(
+         setRefreshData((refreshData() + 1) % 2);
+       }}
+     >
+-      {/* <div class="view"> */}
+-      {props.type == "task" ? (
+-        <input type="checkbox" class="toggle"></input>
+-      ) : (
+-        <input type="checkbox" class="toggle" disabled></input>
+-      )}
+-      <label>{item.item_name}</label>
++      <div class="toggle">
++        {props.type == "task" ? (
++          <input
++            type="checkbox"
++            class="toggle"
++            onClick={(e) =>
++              affectItem(
++                e,
++                "start",
++                item.item_id,
++                1,
++                dataServer,
++                refreshData,
++                setRefreshData
++              )
++            }
++            disabled={item.completed_dtm}
++            checked={item.started_dtm}
++          ></input>
++        ) : (
++          <input type="checkbox" class="toggle" disabled></input>
++        )}
++        <span class="hide">Start</span>
++      </div>
++      <label
++        classList={{ completed: item.completed_dtm, started: item.started_dtm }}
++      >
++        {item.item_name}
++      </label>
+       <button class="destroy" onClick={(e) => affectItem(e, "delete")} />
+-      {/* </div> */}
+     </li>
+   );
+ }
diff --git a/package-lock.json b/package-lock.json
index 828b236..d7ecb89 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -12,6 +12,7 @@
         "solid-js": "^1.7.6"
       },
       "devDependencies": {
+        "@vitejs/plugin-basic-ssl": "^1.0.2",
         "solid-devtools": "^0.27.3",
         "vite": "^4.3.9",
         "vite-plugin-solid": "^2.7.0"
@@ -31,12 +32,12 @@
       }
     },
     "node_modules/@babel/code-frame": {
-      "version": "7.22.13",
-      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.13.tgz",
-      "integrity": "sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==",
+      "version": "7.23.5",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.23.5.tgz",
+      "integrity": "sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA==",
       "dev": true,
       "dependencies": {
-        "@babel/highlight": "^7.22.13",
+        "@babel/highlight": "^7.23.4",
         "chalk": "^2.4.2"
       },
       "engines": {
@@ -83,12 +84,12 @@
       }
     },
     "node_modules/@babel/generator": {
-      "version": "7.22.15",
-      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.22.15.tgz",
-      "integrity": "sha512-Zu9oWARBqeVOW0dZOjXc3JObrzuqothQ3y/n1kUtrjCoCPLkXUwMvOo/F/TCfoHMbWIFlWwpZtkZVb9ga4U2pA==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.23.6.tgz",
+      "integrity": "sha512-qrSfCYxYQB5owCmGLbl8XRpX1ytXlpueOb0N0UmQwA073KZxejgQTzAmJezxvpwQD9uGtK2shHdi55QT+MbjIw==",
       "dev": true,
       "dependencies": {
-        "@babel/types": "^7.22.15",
+        "@babel/types": "^7.23.6",
         "@jridgewell/gen-mapping": "^0.3.2",
         "@jridgewell/trace-mapping": "^0.3.17",
         "jsesc": "^2.5.1"
@@ -158,13 +159,13 @@
       }
     },
     "node_modules/@babel/helper-function-name": {
-      "version": "7.22.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.22.5.tgz",
-      "integrity": "sha512-wtHSq6jMRE3uF2otvfuD3DIvVhOsSNshQl0Qrd7qC9oQJzHvOL4qQXlQn2916+CXGywIjpGuIkoyZRRxHPiNQQ==",
+      "version": "7.23.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz",
+      "integrity": "sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==",
       "dev": true,
       "dependencies": {
-        "@babel/template": "^7.22.5",
-        "@babel/types": "^7.22.5"
+        "@babel/template": "^7.22.15",
+        "@babel/types": "^7.23.0"
       },
       "engines": {
         "node": ">=6.9.0"
@@ -300,9 +301,9 @@
       }
     },
     "node_modules/@babel/helper-string-parser": {
-      "version": "7.22.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz",
-      "integrity": "sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==",
+      "version": "7.23.4",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.23.4.tgz",
+      "integrity": "sha512-803gmbQdqwdf4olxrX4AJyFBV/RTr3rSmOj0rKwesmzlfhYNDEs+/iOcznzpNWlJlIlTJC2QfPFcHB6DlzdVLQ==",
       "dev": true,
       "engines": {
         "node": ">=6.9.0"
@@ -341,9 +342,9 @@
       }
     },
     "node_modules/@babel/highlight": {
-      "version": "7.22.20",
-      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.20.tgz",
-      "integrity": "sha512-dkdMCN3py0+ksCgYmGG8jKeGA/8Tk+gJwSYYlFGxG5lmhfKNoAy004YpLxpS1W2J8m/EK2Ew+yOs9pVRwO89mg==",
+      "version": "7.23.4",
+      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.23.4.tgz",
+      "integrity": "sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A==",
       "dev": true,
       "dependencies": {
         "@babel/helper-validator-identifier": "^7.22.20",
@@ -355,9 +356,9 @@
       }
     },
     "node_modules/@babel/parser": {
-      "version": "7.22.16",
-      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.22.16.tgz",
-      "integrity": "sha512-+gPfKv8UWeKKeJTUxe59+OobVcrYHETCsORl61EmSkmgymguYk/X5bp7GuUIXaFsc6y++v8ZxPsLSSuujqDphA==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.23.6.tgz",
+      "integrity": "sha512-Z2uID7YJ7oNvAI20O9X0bblw7Qqs8Q2hFy0R9tAfnfLkp5MW0UH9eUvnDSnFwKZ0AvgS1ucqR4KzvVHgnke1VQ==",
       "dev": true,
       "bin": {
         "parser": "bin/babel-parser.js"
@@ -465,20 +466,20 @@
       }
     },
     "node_modules/@babel/traverse": {
-      "version": "7.22.20",
-      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.22.20.tgz",
-      "integrity": "sha512-eU260mPZbU7mZ0N+X10pxXhQFMGTeLb9eFS0mxehS8HZp9o1uSnFeWQuG1UPrlxgA7QoUzFhOnilHDp0AXCyHw==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.23.6.tgz",
+      "integrity": "sha512-czastdK1e8YByZqezMPFiZ8ahwVMh/ESl9vPgvgdB9AmFMGP5jfpFax74AQgl5zj4XHzqeYAg2l8PuUeRS1MgQ==",
       "dev": true,
       "dependencies": {
-        "@babel/code-frame": "^7.22.13",
-        "@babel/generator": "^7.22.15",
+        "@babel/code-frame": "^7.23.5",
+        "@babel/generator": "^7.23.6",
         "@babel/helper-environment-visitor": "^7.22.20",
-        "@babel/helper-function-name": "^7.22.5",
+        "@babel/helper-function-name": "^7.23.0",
         "@babel/helper-hoist-variables": "^7.22.5",
         "@babel/helper-split-export-declaration": "^7.22.6",
-        "@babel/parser": "^7.22.16",
-        "@babel/types": "^7.22.19",
-        "debug": "^4.1.0",
+        "@babel/parser": "^7.23.6",
+        "@babel/types": "^7.23.6",
+        "debug": "^4.3.1",
         "globals": "^11.1.0"
       },
       "engines": {
@@ -486,13 +487,13 @@
       }
     },
     "node_modules/@babel/types": {
-      "version": "7.22.19",
-      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.22.19.tgz",
-      "integrity": "sha512-P7LAw/LbojPzkgp5oznjE6tQEIWbp4PkkfrZDINTro9zgBRtI324/EYsiSI7lhPbpIQ+DCeR2NNmMWANGGfZsg==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.23.6.tgz",
+      "integrity": "sha512-+uarb83brBzPKN38NX1MkB6vb6+mwvR6amUulqAE7ccQw1pEl+bCia9TbdG1lsnFP7lZySvUn37CHyXQdfTwzg==",
       "dev": true,
       "dependencies": {
-        "@babel/helper-string-parser": "^7.22.5",
-        "@babel/helper-validator-identifier": "^7.22.19",
+        "@babel/helper-string-parser": "^7.23.4",
+        "@babel/helper-validator-identifier": "^7.22.20",
         "to-fast-properties": "^2.0.0"
       },
       "engines": {
@@ -1190,6 +1191,18 @@
         "@babel/types": "^7.20.7"
       }
     },
+    "node_modules/@vitejs/plugin-basic-ssl": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-basic-ssl/-/plugin-basic-ssl-1.0.2.tgz",
+      "integrity": "sha512-DKHKVtpI+eA5fvObVgQ3QtTGU70CcCnedalzqmGSR050AzKZMdUzgC8KmlOneHWH8dF2hJ3wkC9+8FDVAaDRCw==",
+      "dev": true,
+      "engines": {
+        "node": ">=14.6.0"
+      },
+      "peerDependencies": {
+        "vite": "^3.0.0 || ^4.0.0 || ^5.0.0"
+      }
+    },
     "node_modules/ansi-styles": {
       "version": "3.2.1",
       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
@@ -1532,9 +1545,9 @@
       "dev": true
     },
     "node_modules/nanoid": {
-      "version": "3.3.6",
-      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.6.tgz",
-      "integrity": "sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==",
+      "version": "3.3.7",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
+      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
       "dev": true,
       "funding": [
         {
@@ -1562,9 +1575,9 @@
       "dev": true
     },
     "node_modules/postcss": {
-      "version": "8.4.24",
-      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.24.tgz",
-      "integrity": "sha512-M0RzbcI0sO/XJNucsGjvWU9ERWxb/ytp1w6dKtxTKgixdtQDq4rmx/g8W1hnaheq9jgwL/oyEdH5Bc4WwJKMqg==",
+      "version": "8.4.32",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.32.tgz",
+      "integrity": "sha512-D/kj5JNu6oo2EIy+XL/26JEDTlIbB8hw85G8StOE6L74RQAVVP5rej6wxCNqyMbR4RkPfqvezVbPw81Ngd6Kcw==",
       "dev": true,
       "funding": [
         {
@@ -1581,7 +1594,7 @@
         }
       ],
       "dependencies": {
-        "nanoid": "^3.3.6",
+        "nanoid": "^3.3.7",
         "picocolors": "^1.0.0",
         "source-map-js": "^1.0.2"
       },
@@ -1615,9 +1628,9 @@
       }
     },
     "node_modules/seroval": {
-      "version": "0.5.1",
-      "resolved": "https://registry.npmjs.org/seroval/-/seroval-0.5.1.tgz",
-      "integrity": "sha512-ZfhQVB59hmIauJG5Ydynupy8KHyr5imGNtdDhbZG68Ufh1Ynkv9KOYOAABf71oVbQxJ8VkWnMHAjEHE7fWkH5g==",
+      "version": "0.15.1",
+      "resolved": "https://registry.npmjs.org/seroval/-/seroval-0.15.1.tgz",
+      "integrity": "sha512-OPVtf0qmeC7RW+ScVX+7aOS+xoIM7pWcZ0jOWg2aTZigCydgRB04adfteBRbecZnnrO1WuGQ+C3tLeBBzX2zSQ==",
       "engines": {
         "node": ">=10"
       }
@@ -1649,12 +1662,12 @@
       }
     },
     "node_modules/solid-js": {
-      "version": "1.7.6",
-      "resolved": "https://registry.npmjs.org/solid-js/-/solid-js-1.7.6.tgz",
-      "integrity": "sha512-DXVOTjUh/bIAhE0fIqu3ezGLyQaez7v8EOw3uPLIi87DmLjg+hsuCAgKyNIZ+o4jUetOk3ZORccvJmE1yZUk8g==",
+      "version": "1.8.7",
+      "resolved": "https://registry.npmjs.org/solid-js/-/solid-js-1.8.7.tgz",
+      "integrity": "sha512-9dzrSVieh2zj3SnJ02II6xZkonR6c+j/91b7XZUNcC6xSaldlqjjGh98F1fk5cRJ8ZTkzqF5fPIWDxEOs6QZXA==",
       "dependencies": {
         "csstype": "^3.1.0",
-        "seroval": "^0.5.0"
+        "seroval": "^0.15.1"
       }
     },
     "node_modules/solid-refresh": {
@@ -1837,12 +1850,12 @@
       }
     },
     "@babel/code-frame": {
-      "version": "7.22.13",
-      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.22.13.tgz",
-      "integrity": "sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==",
+      "version": "7.23.5",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.23.5.tgz",
+      "integrity": "sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA==",
       "dev": true,
       "requires": {
-        "@babel/highlight": "^7.22.13",
+        "@babel/highlight": "^7.23.4",
         "chalk": "^2.4.2"
       }
     },
@@ -1876,12 +1889,12 @@
       }
     },
     "@babel/generator": {
-      "version": "7.22.15",
-      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.22.15.tgz",
-      "integrity": "sha512-Zu9oWARBqeVOW0dZOjXc3JObrzuqothQ3y/n1kUtrjCoCPLkXUwMvOo/F/TCfoHMbWIFlWwpZtkZVb9ga4U2pA==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.23.6.tgz",
+      "integrity": "sha512-qrSfCYxYQB5owCmGLbl8XRpX1ytXlpueOb0N0UmQwA073KZxejgQTzAmJezxvpwQD9uGtK2shHdi55QT+MbjIw==",
       "dev": true,
       "requires": {
-        "@babel/types": "^7.22.15",
+        "@babel/types": "^7.23.6",
         "@jridgewell/gen-mapping": "^0.3.2",
         "@jridgewell/trace-mapping": "^0.3.17",
         "jsesc": "^2.5.1"
@@ -1933,13 +1946,13 @@
       "dev": true
     },
     "@babel/helper-function-name": {
-      "version": "7.22.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.22.5.tgz",
-      "integrity": "sha512-wtHSq6jMRE3uF2otvfuD3DIvVhOsSNshQl0Qrd7qC9oQJzHvOL4qQXlQn2916+CXGywIjpGuIkoyZRRxHPiNQQ==",
+      "version": "7.23.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz",
+      "integrity": "sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw==",
       "dev": true,
       "requires": {
-        "@babel/template": "^7.22.5",
-        "@babel/types": "^7.22.5"
+        "@babel/template": "^7.22.15",
+        "@babel/types": "^7.23.0"
       }
     },
     "@babel/helper-hoist-variables": {
@@ -2039,9 +2052,9 @@
       }
     },
     "@babel/helper-string-parser": {
-      "version": "7.22.5",
-      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz",
-      "integrity": "sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==",
+      "version": "7.23.4",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.23.4.tgz",
+      "integrity": "sha512-803gmbQdqwdf4olxrX4AJyFBV/RTr3rSmOj0rKwesmzlfhYNDEs+/iOcznzpNWlJlIlTJC2QfPFcHB6DlzdVLQ==",
       "dev": true
     },
     "@babel/helper-validator-identifier": {
@@ -2068,9 +2081,9 @@
       }
     },
     "@babel/highlight": {
-      "version": "7.22.20",
-      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.22.20.tgz",
-      "integrity": "sha512-dkdMCN3py0+ksCgYmGG8jKeGA/8Tk+gJwSYYlFGxG5lmhfKNoAy004YpLxpS1W2J8m/EK2Ew+yOs9pVRwO89mg==",
+      "version": "7.23.4",
+      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.23.4.tgz",
+      "integrity": "sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A==",
       "dev": true,
       "requires": {
         "@babel/helper-validator-identifier": "^7.22.20",
@@ -2079,9 +2092,9 @@
       }
     },
     "@babel/parser": {
-      "version": "7.22.16",
-      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.22.16.tgz",
-      "integrity": "sha512-+gPfKv8UWeKKeJTUxe59+OobVcrYHETCsORl61EmSkmgymguYk/X5bp7GuUIXaFsc6y++v8ZxPsLSSuujqDphA==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.23.6.tgz",
+      "integrity": "sha512-Z2uID7YJ7oNvAI20O9X0bblw7Qqs8Q2hFy0R9tAfnfLkp5MW0UH9eUvnDSnFwKZ0AvgS1ucqR4KzvVHgnke1VQ==",
       "dev": true
     },
     "@babel/plugin-syntax-jsx": {
@@ -2150,31 +2163,31 @@
       }
     },
     "@babel/traverse": {
-      "version": "7.22.20",
-      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.22.20.tgz",
-      "integrity": "sha512-eU260mPZbU7mZ0N+X10pxXhQFMGTeLb9eFS0mxehS8HZp9o1uSnFeWQuG1UPrlxgA7QoUzFhOnilHDp0AXCyHw==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.23.6.tgz",
+      "integrity": "sha512-czastdK1e8YByZqezMPFiZ8ahwVMh/ESl9vPgvgdB9AmFMGP5jfpFax74AQgl5zj4XHzqeYAg2l8PuUeRS1MgQ==",
       "dev": true,
       "requires": {
-        "@babel/code-frame": "^7.22.13",
-        "@babel/generator": "^7.22.15",
+        "@babel/code-frame": "^7.23.5",
+        "@babel/generator": "^7.23.6",
         "@babel/helper-environment-visitor": "^7.22.20",
-        "@babel/helper-function-name": "^7.22.5",
+        "@babel/helper-function-name": "^7.23.0",
         "@babel/helper-hoist-variables": "^7.22.5",
         "@babel/helper-split-export-declaration": "^7.22.6",
-        "@babel/parser": "^7.22.16",
-        "@babel/types": "^7.22.19",
-        "debug": "^4.1.0",
+        "@babel/parser": "^7.23.6",
+        "@babel/types": "^7.23.6",
+        "debug": "^4.3.1",
         "globals": "^11.1.0"
       }
     },
     "@babel/types": {
-      "version": "7.22.19",
-      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.22.19.tgz",
-      "integrity": "sha512-P7LAw/LbojPzkgp5oznjE6tQEIWbp4PkkfrZDINTro9zgBRtI324/EYsiSI7lhPbpIQ+DCeR2NNmMWANGGfZsg==",
+      "version": "7.23.6",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.23.6.tgz",
+      "integrity": "sha512-+uarb83brBzPKN38NX1MkB6vb6+mwvR6amUulqAE7ccQw1pEl+bCia9TbdG1lsnFP7lZySvUn37CHyXQdfTwzg==",
       "dev": true,
       "requires": {
-        "@babel/helper-string-parser": "^7.22.5",
-        "@babel/helper-validator-identifier": "^7.22.19",
+        "@babel/helper-string-parser": "^7.23.4",
+        "@babel/helper-validator-identifier": "^7.22.20",
         "to-fast-properties": "^2.0.0"
       }
     },
@@ -2617,6 +2630,13 @@
         "@babel/types": "^7.20.7"
       }
     },
+    "@vitejs/plugin-basic-ssl": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-basic-ssl/-/plugin-basic-ssl-1.0.2.tgz",
+      "integrity": "sha512-DKHKVtpI+eA5fvObVgQ3QtTGU70CcCnedalzqmGSR050AzKZMdUzgC8KmlOneHWH8dF2hJ3wkC9+8FDVAaDRCw==",
+      "dev": true,
+      "requires": {}
+    },
     "ansi-styles": {
       "version": "3.2.1",
       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
@@ -2851,9 +2871,9 @@
       "dev": true
     },
     "nanoid": {
-      "version": "3.3.6",
-      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.6.tgz",
-      "integrity": "sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==",
+      "version": "3.3.7",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
+      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
       "dev": true
     },
     "node-releases": {
@@ -2869,12 +2889,12 @@
       "dev": true
     },
     "postcss": {
-      "version": "8.4.24",
-      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.24.tgz",
-      "integrity": "sha512-M0RzbcI0sO/XJNucsGjvWU9ERWxb/ytp1w6dKtxTKgixdtQDq4rmx/g8W1hnaheq9jgwL/oyEdH5Bc4WwJKMqg==",
+      "version": "8.4.32",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.32.tgz",
+      "integrity": "sha512-D/kj5JNu6oo2EIy+XL/26JEDTlIbB8hw85G8StOE6L74RQAVVP5rej6wxCNqyMbR4RkPfqvezVbPw81Ngd6Kcw==",
       "dev": true,
       "requires": {
-        "nanoid": "^3.3.6",
+        "nanoid": "^3.3.7",
         "picocolors": "^1.0.0",
         "source-map-js": "^1.0.2"
       }
@@ -2895,9 +2915,9 @@
       "dev": true
     },
     "seroval": {
-      "version": "0.5.1",
-      "resolved": "https://registry.npmjs.org/seroval/-/seroval-0.5.1.tgz",
-      "integrity": "sha512-ZfhQVB59hmIauJG5Ydynupy8KHyr5imGNtdDhbZG68Ufh1Ynkv9KOYOAABf71oVbQxJ8VkWnMHAjEHE7fWkH5g=="
+      "version": "0.15.1",
+      "resolved": "https://registry.npmjs.org/seroval/-/seroval-0.15.1.tgz",
+      "integrity": "sha512-OPVtf0qmeC7RW+ScVX+7aOS+xoIM7pWcZ0jOWg2aTZigCydgRB04adfteBRbecZnnrO1WuGQ+C3tLeBBzX2zSQ=="
     },
     "solid-devtools": {
       "version": "0.27.7",
@@ -2913,12 +2933,12 @@
       }
     },
     "solid-js": {
-      "version": "1.7.6",
-      "resolved": "https://registry.npmjs.org/solid-js/-/solid-js-1.7.6.tgz",
-      "integrity": "sha512-DXVOTjUh/bIAhE0fIqu3ezGLyQaez7v8EOw3uPLIi87DmLjg+hsuCAgKyNIZ+o4jUetOk3ZORccvJmE1yZUk8g==",
+      "version": "1.8.7",
+      "resolved": "https://registry.npmjs.org/solid-js/-/solid-js-1.8.7.tgz",
+      "integrity": "sha512-9dzrSVieh2zj3SnJ02II6xZkonR6c+j/91b7XZUNcC6xSaldlqjjGh98F1fk5cRJ8ZTkzqF5fPIWDxEOs6QZXA==",
       "requires": {
         "csstype": "^3.1.0",
-        "seroval": "^0.5.0"
+        "seroval": "^0.15.1"
       }
     },
     "solid-refresh": {
diff --git a/package.json b/package.json
index b79689a..1d6aac0 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
   },
   "license": "MIT",
   "devDependencies": {
+    "@vitejs/plugin-basic-ssl": "^1.0.2",
     "solid-devtools": "^0.27.3",
     "vite": "^4.3.9",
     "vite-plugin-solid": "^2.7.0"
diff --git a/src/GlobalStateProvider.jsx b/src/GlobalStateProvider.jsx
index 734c084..2b5266f 100644
--- a/src/GlobalStateProvider.jsx
+++ b/src/GlobalStateProvider.jsx
@@ -14,7 +14,7 @@ export function GlobalStateProvider(props) {
         setCount((c) => c - 1);
       },
     },
-    "http://127.0.0.1:3001",
+    "https://127.0.0.1:3001",
   ];
 
   return (
diff --git a/src/LifeHelperApp.css b/src/LifeHelperApp.css
index ca5fc05..a336811 100644
--- a/src/LifeHelperApp.css
+++ b/src/LifeHelperApp.css
@@ -46,19 +46,26 @@ header {
   gap: 10px;
 }
 
-.app .return::after {
+button.return::after {
   font-size: 30px;
   content: "\25B2";
   padding-inline-end: 10px;
 }
 
-.app .return {
+button.return {
   color: var(--primary-color);
   opacity: 0.5;
+  display: none;
 }
 
-.app .return:hover,
-.app .destroy:hover {
+button.return.visible {
+  color: var(--primary-color);
+  opacity: 0.5;
+  display: block;
+}
+
+button.return:hover,
+button.destroy:hover {
   opacity: 1;
 }
 
@@ -71,6 +78,55 @@ button {
   content: "Ã—";
 }
 
-.item-list li .toggle {
-  accent-color: #2196f3;
+/* *** using a pseudo-element to indicate the purpose of the "start" check box *** */
+/* input.toggle::before {
+  content: "Start";
+  position: relative;
+  opacity: 0;
+  color: white;
+  left: 1.5rem;
+  top: -0.7rem;
+  font-size: 0.2rem;
+}
+
+input.toggle:hover::before {
+  opacity: 1;
+  font-size: 0.6rem;
+  color: var(--primary-color);
+  transition: all 2s;
+} */
+
+/* *** using a span element to indicate the purpose of the "start" check box *** */
+div.toggle {
+  position: relative;
+}
+
+div.toggle:hover > span.hide {
+  opacity: 1;
+  font-size: 0.8rem;
+  color: var(--primary-color);
+  transition: all 1s;
+}
+
+span.hide {
+  position: absolute;
+  opacity: 0;
+  color: white;
+  left: -1.5rem;
+  font-size: 0.2rem;
+}
+
+/* Experiment with using both class and classList attributes on the same element */
+.started {
+  font-weight: bold;
+}
+
+.completed {
+  background-color: turquoise;
+}
+/* End of experiment */
+
+footer {
+  display: flex;
+  flex-direction: column;
 }
diff --git a/src/LifeHelperApp.jsx b/src/LifeHelperApp.jsx
index 216c342..cbc1c18 100644
--- a/src/LifeHelperApp.jsx
+++ b/src/LifeHelperApp.jsx
@@ -1,5 +1,4 @@
 import "./LifeHelperApp.css";
-import { itemFromImport } from "./objective-goal-task.jsx";
 
 import {
   Show,
@@ -8,13 +7,17 @@ import {
   createResource,
   createEffect,
 } from "solid-js";
+
 import { useGlobalState } from "./GlobalStateProvider";
 
-import { FindParentElement } from "./helperFunctions";
+import { itemFromImport } from "./objective-goal-task.jsx";
+import {
+  affectItem,
+  startedButNotCompletedCount,
+  completedCount,
+} from "./helperFunctions";
 
 function LifeHelperApp(props) {
-  //   var x = itemFromImport({ item_id: 5 });
-
   var [refreshData, setRefreshData] = createSignal(0);
   var [, , dataServer] = useGlobalState();
   // parent contains an array of at most two objects.
@@ -22,10 +25,11 @@ function LifeHelperApp(props) {
   // 2) If the current view is a list of goals, then the array contains
   //    one object that identifies the objective with which they are associated.
   // 3) If the current view is a list of tasks, then the array contains two objects.
-  //    The last object contains the goals to which they are associated
+  //    The last object contains the goal to which they are associated
   //    and the first object contains the objective to which the goal in the last object is associated.
   var [parent, setParent] = createSignal([]);
   var [pageTitle, setPageTitle] = createSignal("");
+  var [visibleClassValue, setVisibleClassValue] = createSignal("");
 
   createEffect(pageTitleEffect);
 
@@ -33,6 +37,7 @@ function LifeHelperApp(props) {
     switch (props.type) {
       case "objective":
         setPageTitle("Overall Objectives");
+        setVisibleClassValue("");
         break;
       case "goal":
         setPageTitle(
@@ -40,11 +45,14 @@ function LifeHelperApp(props) {
             parent()[parent().length - 1].item_name
           }"`
         );
+        setVisibleClassValue("visible");
         break;
       case "task":
         setPageTitle(
           `Tasks to achieve goal "${parent()[parent().length - 1].item_name}"`
         );
+        setVisibleClassValue("visible");
+
         break;
       default:
         setPageTitle("Unknown Page Item");
@@ -52,21 +60,15 @@ function LifeHelperApp(props) {
   }
 
   const fetchItems = async () => {
-    // request options
-
-    var item = {};
-    if (props.type == "objective") item.item_id = 0;
-    else item.item_id = parent()[parent().length - 1].item_id;
+    var searchParams = "";
+    if (props.type != "objective")
+      searchParams = JSON.stringify({
+        parent_id: parent()[parent().length - 1].item_id,
+      });
 
-    const options = {
-      method: "POST",
-      body: JSON.stringify(item),
-      headers: {
-        "Content-Type": "application/json",
-      },
-    };
-
-    var response = await fetch(dataServer + `/get/${props.type}s`, options);
+    var response = await fetch(
+      dataServer + `/${props.type}s` + "?params=" + searchParams
+    );
     if (!response.ok) {
       alert(
         `Server Error: status is ${response.status} reason is ${response.statusText}`
@@ -78,57 +80,11 @@ function LifeHelperApp(props) {
 
   const [items] = createResource(refreshData, fetchItems);
 
-  async function affectItem(evt, affectType) {
-    // body data
-    var item;
-
-    switch (affectType) {
-      case "add":
-        item = {
-          name: evt.target.value,
-          description: `This is a description of an ${props.type}`, // TODO create a description control
-        };
-        item.item_id = parent()[parent().length - 1].item_id;
-        break;
-      case "update":
-        item = {
-          name: evt.target.value,
-          item_id: evt.target.attributes.item_id.value,
-          description: `This is a description of an ${props.type}`, // TODO create a description control
-        };
-        break;
-      case "delete":
-        var parentLi = FindParentElement(evt.target, "li");
-        item = {
-          item_id: parentLi.attributes.item_id.value,
-        };
-        break;
-    }
-
-    // request options
-    const options = {
-      method: "POST",
-      body: JSON.stringify(item),
-      headers: {
-        "Content-Type": "application/json",
-      },
-    };
-
-    // send POST request
-    var response = await fetch(
-      dataServer + `/${affectType}/${props.type}`,
-      options
-    );
-
-    if (!response.ok) {
-      alert(
-        `Server Error: status is ${response.status} reason is ${response.statusText}`
-      );
-    } else {
-      setRefreshData((refreshData() + 1) % 2);
-      evt.target.value = "";
-    }
-  }
+  //   var startedCount = createMemo(
+  //     items().reduce((item, totalStarted) => {
+  //       if (item.started_dtm) totalStarted++;
+  //     })
+  //   );
 
   function returnToParent() {
     setParent(() => {
@@ -154,11 +110,24 @@ function LifeHelperApp(props) {
       <header>
         <div class="header-title">
           <h1 class={`${props.type}_header`}>{pageTitle()}</h1>
-          <button class="return" onClick={returnToParent}></button>
+          <button
+            class={`return ${visibleClassValue()}`}
+            onClick={returnToParent}
+          ></button>
         </div>
         <input
           class="new-item"
-          onChange={(e) => affectItem(e, "add")}
+          onChange={(e) => {
+            affectItem(
+              e,
+              "add",
+              parent().length == 0 ? 0 : parent()[parent().length - 1].item_id,
+              props.type,
+              dataServer,
+              refreshData,
+              setRefreshData
+            );
+          }}
           placeholder={`Enter ${props.type}`}
         />
       </header>
@@ -175,13 +144,25 @@ function LifeHelperApp(props) {
                   setParent,
                   parent,
                   setRefreshData,
-                  refreshData
+                  refreshData,
+                  dataServer
                 )
               }
             </For>
           </ul>
         </Show>
       )}
+      <footer>
+        <span>{`Total items: ${
+          items.state == "ready" && items().length
+        }`}</span>
+        <span>{`Started but not completed items: ${
+          items.state == "ready" && startedButNotCompletedCount(items)
+        }`}</span>
+        <span>{`Completed items: ${
+          items.state == "ready" && completedCount(items)
+        }`}</span>
+      </footer>
     </section>
   );
 }
diff --git a/src/helperFunctions.js b/src/helperFunctions.js
index e1074e6..8353178 100644
--- a/src/helperFunctions.js
+++ b/src/helperFunctions.js
@@ -4,3 +4,85 @@ export function FindParentElement(currentElement, parentType) {
   if (currentElement.localName == parentType) return currentElement;
   else return FindParentElement(currentElement.parentElement, parentType);
 }
+
+export async function affectItem(
+  evt,
+  affectType,
+  item_id,
+  item_type,
+  dataServer,
+  refreshData,
+  setRefreshData
+) {
+  // body data
+  var item;
+  var endPoint;
+
+  switch (affectType) {
+    case "add":
+      item = {
+        parent_id: item_id,
+        name: evt.target.value,
+        description: `This is a description of a ${item_type}`, // TODO create a description control
+      };
+      endPoint = `/${affectType}/${item_type}`;
+      // item.item_id = parent()[parent().length - 1].item_id;
+      break;
+    case "start":
+      item = {
+        task_id: item_id,
+      };
+      endPoint = `/${affectType}`;
+      break;
+    case "update":
+      item = {
+        name: evt.target.value,
+        item_id: evt.target.attributes.item_id.value,
+        description: `This is a description of a ${item_type}`, // TODO create a description control
+      };
+      break;
+    case "delete":
+      var parentLi = FindParentElement(evt.target, "li");
+      item = {
+        item_id: parentLi.attributes.item_id.value,
+      };
+      break;
+  }
+
+  // request options
+  const options = {
+    method: "POST",
+    body: JSON.stringify(item),
+    headers: {
+      "Content-Type": "application/json",
+    },
+  };
+
+  // send POST request
+  var response = await fetch(dataServer + endPoint, options);
+
+  if (!response.ok) {
+    alert(
+      `Server Error: status is ${response.status} reason is ${response.statusText}`
+    );
+    return false;
+  } else {
+    evt.target.value = "";
+    setRefreshData((refreshData() + 1) % 2);
+    return true;
+  }
+}
+
+export function startedButNotCompletedCount(items) {
+  return items().reduce((totalStarted, item) => {
+    if (item.started_dtm && !item.completed_dtm) return totalStarted + 1;
+    else return totalStarted;
+  }, 0);
+}
+
+export function completedCount(items) {
+  return items().reduce((totalStarted, item) => {
+    if (item.completed_dtm) return totalStarted + 1;
+    else return totalStarted;
+  }, 0);
+}
diff --git a/src/objective-goal-task.jsx b/src/objective-goal-task.jsx
index 223db17..e9d6c7b 100644
--- a/src/objective-goal-task.jsx
+++ b/src/objective-goal-task.jsx
@@ -1,13 +1,16 @@
 import { FindParentElement } from "./helperFunctions";
+import { affectItem } from "./helperFunctions";
 
 export function itemFromImport(
-  item,
-  props,
-  setParent,
-  parent,
-  setRefreshData,
-  refreshData
+  item /* used in LifeHelperApp */,
+  props /* used in LifeHelperApp */,
+  setParent /* used in LifeHelperApp */,
+  parent /* used in LifeHelperApp */,
+  setRefreshData /* used in LifeHelperApp */,
+  refreshData /* used in LifeHelperApp */,
+  dataServer /* used in LifeHelperApp */
 ) {
+  console.log(`In itemFromImport rendering item with name ${item.item_name}`);
   return (
     <li
       class="item"
@@ -30,15 +33,36 @@ export function itemFromImport(
         setRefreshData((refreshData() + 1) % 2);
       }}
     >
-      {/* <div class="view"> */}
-      {props.type == "task" ? (
-        <input type="checkbox" class="toggle"></input>
-      ) : (
-        <input type="checkbox" class="toggle" disabled></input>
-      )}
-      <label>{item.item_name}</label>
+      <div class="toggle">
+        {props.type == "task" ? (
+          <input
+            type="checkbox"
+            class="toggle"
+            onClick={(e) =>
+              affectItem(
+                e,
+                "start",
+                item.item_id,
+                1,
+                dataServer,
+                refreshData,
+                setRefreshData
+              )
+            }
+            disabled={item.completed_dtm}
+            checked={item.started_dtm}
+          ></input>
+        ) : (
+          <input type="checkbox" class="toggle" disabled></input>
+        )}
+        <span class="hide">Start</span>
+      </div>
+      <label
+        classList={{ completed: item.completed_dtm, started: item.started_dtm }}
+      >
+        {item.item_name}
+      </label>
       <button class="destroy" onClick={(e) => affectItem(e, "delete")} />
-      {/* </div> */}
     </li>
   );
 }
diff --git a/vite.config.js b/vite.config.js
index 74fce7e..49194ca 100644
--- a/vite.config.js
+++ b/vite.config.js
@@ -1,6 +1,7 @@
-import { defineConfig } from 'vite';
-import solidPlugin from 'vite-plugin-solid';
+import { defineConfig } from "vite";
+import solidPlugin from "vite-plugin-solid";
 // import devtools from 'solid-devtools/vite';
+import basicSsl from "@vitejs/plugin-basic-ssl";
 
 export default defineConfig({
   plugins: [
@@ -15,6 +16,7 @@ export default defineConfig({
     port: 3000,
   },
   build: {
-    target: 'esnext',
+    target: "esnext",
   },
+  plugins: [basicSsl()],
 });
