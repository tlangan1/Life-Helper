@import "./colors.css";

html {
  box-sizing: border-box;
}

::before,
::after,
* {
  box-sizing: inherit;
}

html,
body,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

h1 {
  font-size: 1.5rem;
  padding: 0.5rem;
  color: var(--primary-color);
}

.app,
header {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.header-title {
  display: flex;
}

.item {
  display: grid;
  grid-template-columns: 0.2fr 1fr 0.2fr;
  gap: 10px;
}

button {
  background: none;
  border: 0;
}

button.subscription-button {
  background: rgb(240, 240, 240);
  color: var(--primary-color);
  border: solid black;
  margin: 0.5rem;
}

button.return::after {
  font-size: 30px;
  content: "\25B2";
  padding-inline-end: 10px;
}

button.return {
  display: none;
}

button.return.visible {
  color: var(--primary-color);
  opacity: 0.3;
  display: block;
}

button.destroy {
  opacity: 0.3;
}

button.return:hover,
button.destroy:hover {
  opacity: 1;
  scale: 1.5;
  transition: all 0.5s;
}

.item-list li .destroy::after {
  content: "x";
}

/* *** using a span element to indicate the purpose of the "start" check box *** */
div.toggle {
  position: relative;
}

div.toggle:hover > span.hide {
  opacity: 1;
  font-size: 0.8rem;
  color: var(--primary-color);
  transition: all 1s;
}

span.hide {
  position: absolute;
  opacity: 0;
  color: white;
  left: -1.5rem;
  font-size: 0.2rem;
}

/* Experiment with using both class and classList attributes on the same element */
.started {
  font-weight: bold;
}

.completed {
  background-color: turquoise;
}
/* End of experiment */

footer {
  display: flex;
  flex-direction: column;
}
